// phone-formatter.js
function getCountryFlag(phone) {
    const cleanPhone = phone.replace(/\D/g, '');
    
    if (cleanPhone.startsWith('7') || cleanPhone.startsWith('8')) {
        return 'üá∑üá∫';
    } else if (cleanPhone.startsWith('380')) {
        return 'üá∫üá¶';
    } else if (cleanPhone.startsWith('375')) {
        return 'üáßüáæ';
    } else if (cleanPhone.startsWith('77')) {
        return 'üá∞üáø';
    } else if (cleanPhone.startsWith('998')) {
        return 'üá∫üáø';
    } else if (cleanPhone.startsWith('1')) {
        return 'üá∫üá∏';
    } else if (cleanPhone.startsWith('44')) {
        return 'üá¨üáß';
    } else if (cleanPhone.startsWith('49')) {
        return 'üá©üá™';
    } else if (cleanPhone.startsWith('33')) {
        return 'üá´üá∑';
    }
    
    return 'üåç';
}

function formatPhoneNumber(input) {
    let value = input.value.replace(/\D/g, '');
    
    if (value.startsWith('8')) {
        value = '7' + value.substring(1);
    }
    
    let formattedValue = '';
    
    if (value.length > 0) {
        formattedValue = '+';
        
        if (value.length > 0) {
            formattedValue += value.substring(0, 1);
        }
        if (value.length > 1) {
            formattedValue += ' (' + value.substring(1, 4);
        }
        if (value.length > 4) {
            formattedValue += ') ' + value.substring(4, 7);
        }
        if (value.length > 7) {
            formattedValue += '-' + value.substring(7, 9);
        }
        if (value.length > 9) {
            formattedValue += '-' + value.substring(9, 11);
        }
    }
    
    input.value = formattedValue;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–ª–∞–≥
    const flag = getCountryFlag(value);
    document.getElementById('countryFlag').textContent = flag;
}

function formatPhoneForDisplay(phone) {
    const cleanPhone = phone.replace(/\D/g, '');
    
    if (cleanPhone.startsWith('7') || cleanPhone.startsWith('8')) {
        return `+7 (${cleanPhone.substring(1, 4)}) ${cleanPhone.substring(4, 7)}-${cleanPhone.substring(7, 9)}-${cleanPhone.substring(9, 11)}`;
    } else {
        // –î–ª—è –¥—Ä—É–≥–∏—Ö —Å—Ç—Ä–∞–Ω - –ø—Ä–æ—Å—Ç–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å –ø—Ä–æ–±–µ–ª–∞–º–∏
        return `+${cleanPhone}`.replace(/(\d{1,3})(\d{3})(\d{3})(\d{2})(\d{2})/, '+$1 ($2) $3-$4-$5');
    }
}
