// telegram-bot.js - –ë–æ—Ç —á–µ—Ä–µ–∑ Telegram Web App
class TelegramBot {
    constructor() {
        this.commands = {
            '/start': this.handleStart.bind(this),
            '/gift': this.handleGift.bind(this),
            '/gifts': this.handleGifts.bind(this),
            '/stats': this.handleStats.bind(this)
        };
    }
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /gift –æ—Ç –∞–¥–º–∏–Ω–∞
    async handleGift(message, userId) {
        if (userId !== CONFIG.ADMIN_ID) {
            return "‚ùå –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω –º–æ–∂–µ—Ç –¥–æ–±–∞–≤–ª—è—Ç—å –ø–æ–¥–∞—Ä–∫–∏";
        }
        
        const params = message.split(' ');
        if (params.length < 6) {
            return "‚ÑπÔ∏è –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /gift [—ç–º–æ–¥–∑–∏] [–ú–æ–¥–µ–ª—å] [–¥–Ω–∏] [—Ü–µ–Ω–∞] [—Ñ–æ–Ω] [—É–∑–æ—Ä] [–≤–∏–¥–µ–æ-URL]";
        }
        
        try {
            const giftData = {
                image: params[0],
                model: params[1],
                days: parseInt(params[2]),
                price: parseFloat(params[3]),
                background: params[4],
                pattern: params[5],
                video: params[6] || ""
            };
            
            const result = await window.supabaseClient.addGift(giftData, userId);
            
            if (result.success) {
                return `üéÅ –ü–æ–¥–∞—Ä–æ–∫ "${giftData.model}" –¥–æ–±–∞–≤–ª–µ–Ω!\nüí∞ ${giftData.price} TON | üìÖ ${giftData.days} –¥–Ω–µ–π`;
            } else {
                return "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–¥–∞—Ä–∫–∞";
            }
        } catch (error) {
            return "‚ùå –û—à–∏–±–∫–∞: " + error.message;
        }
    }
    
    // –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –ø–æ–¥–∞—Ä–∫–∏
    async handleGifts() {
        try {
            const gifts = await window.supabaseClient.getGifts();
            
            if (gifts.length === 0) {
                return "üì≠ –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤";
            }
            
            let message = "üéÅ –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–∏:\n\n";
            gifts.forEach((gift, index) => {
                message += `${index + 1}. ${gift.image} ${gift.model}\n`;
                message += `   üí∞ ${gift.price} TON | üìÖ ${gift.days} –¥–Ω–µ–π\n\n`;
            });
            
            return message;
        } catch (error) {
            return "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–¥–∞—Ä–∫–æ–≤";
        }
    }
    
    // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    async handleStats(userId) {
        try {
            const stats = await window.supabaseClient.getUserStats(userId);
            const userData = await window.supabaseClient.getUserData(userId);
            
            return `üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n` +
                   `üéÅ –ê—Ä–µ–Ω–¥–æ–≤–∞–Ω–æ: ${stats.rentedGifts} –ø–æ–¥–∞—Ä–∫–æ–≤\n` +
                   `üí∞ –ë–∞–ª–∞–Ω—Å: ${stats.balance} TON\n` +
                   `üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${userData?.phone || '–ù–µ —É–∫–∞–∑–∞–Ω'}\n` +
                   `üë§ ID: ${userId}`;
        } catch (error) {
            return "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏";
        }
    }
    
    // –°—Ç–∞—Ä—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞
    handleStart() {
        return `üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Gift Up!\n\n` +
               `–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n` +
               `üìã /gifts - –°–ø–∏—Å–æ–∫ –ø–æ–¥–∞—Ä–∫–æ–≤\n` +
               `üìä /stats - –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n` +
               `üéÅ /gift - –î–æ–±–∞–≤–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫ (—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω)`;
    }
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    async processMessage(command, message, userId) {
        const handler = this.commands[command];
        if (handler) {
            return await handler(message, userId);
        }
        return "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏";
    }
}

window.telegramBot = new TelegramBot();
